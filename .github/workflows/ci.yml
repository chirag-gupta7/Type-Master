name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint --workspace=apps/frontend
      
      - name: Run type check
        run: npm run typecheck --workspace=apps/frontend
      
      - name: Run tests
        run: npm run test:ci --workspace=apps/frontend
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./apps/frontend/coverage/lcov.info
          flags: frontend

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: typemaster_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint --workspace=apps/backend
      
      - name: Run type check
        run: npm run typecheck --workspace=apps/backend
      
      - name: Generate Prisma Client
        run: npm run prisma:generate --workspace=apps/backend
      
      - name: Run migrations
        run: npm run prisma:migrate --workspace=apps/backend
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/typemaster_test?schema=public
      
      - name: Run tests
        run: npm run test:ci --workspace=apps/backend
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/typemaster_test?schema=public
          JWT_SECRET: test-secret
          JWT_REFRESH_SECRET: test-refresh-secret
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./apps/backend/coverage/lcov.info
          flags: backend

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: [test-frontend]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build --workspace=apps/frontend
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    needs: [test-backend]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build --workspace=apps/backend
